#!/usr/bin/env python
# documentation
# true module structure and upload to pip

#FIXME: so, this is only two-level params for now
#FIXME: auto select smallest possible matrix?
#FIXME: can get more info from higher strength oas...

def main(argv=None):
    from argparse import ArgumentParser
    from os.path import isfile
    from sys import stdin, stderr
    from sys import exit
    import csv
    import subprocess
    import re

    parser = ArgumentParser(
        description="Run an experiment")

    # FIXME: uh, better parameter names?
    parser.add_argument('-e', '--experiments', help='experiment file')
    parser.add_argument('-r', '--results', help='cached result file')

    args = parser.parse_args()

    if isfile(args.experiments):
        experiments = dict((row[0] + ',' + row[1], row[2])
                           for row in csv.reader(open(args.experiments, 'r')))
    else:
        raise SystemExit("error: must specify valid experiment file.")

    if args.results and isfile(args.results):
        results = dict((row[0] + ',' + row[1], ','.join(row[2:])) 
                       for row in csv.reader(open(args.results, 'r')))
    else:
        results = {}

    for paramsinst in experiments:

        if paramsinst not in results:
            proc = subprocess.Popen('/bin/sh', 
                stdin=subprocess.PIPE, stdout=subprocess.PIPE)
            output, error = proc.communicate(input=experiments[paramsinst])
            results[paramsinst] = output.strip()

        print paramsinst + "," + results[paramsinst]
            
if __name__ == "__main__":
    main()
